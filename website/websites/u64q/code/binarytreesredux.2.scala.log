
Sat, 23 Jun 2012 18:40:44 GMT

MAKE:
mv binarytreesredux.scala-2.scala binarytreesredux.scala
/usr/local/src/scala-2.9.2/bin/scalac -optimise binarytreesredux.scala
10.84s to complete and log all make actions

COMMAND LINE:
 /usr/local/src/jdk1.7.0_05/bin/java -server -XX:+TieredCompilation -XX:+AggressiveOpts -Xms128m -Xmx128m -Xbootclasspath/a:/usr/local/src/scala-2.9.2/lib/scala-library.jar binarytreesredux 20

TIMED OUT after 3600s


PROGRAM OUTPUT:
stretch tree of depth 21	 check: -1
2097152	 trees of depth 4	 check: -2097152
524288	 trees of depth 6	 check: -524288
131072	 trees of depth 8	 check: -131072
32768	 trees of depth 10	 check: -32768
8192	 trees of depth 12	 check: -8192
2048	 trees of depth 14	 check: -2048
512	 trees of depth 16	 check: -512
128	 trees of depth 18	 check: -128

<function0>: caught java.lang.OutOfMemoryError: Java heap space
<function0>: caught java.lang.OutOfMemoryError: Java heap space
java.lang.OutOfMemoryError: Java heap space
	at Tree$.apply(binarytreesredux.scala:52)
	at Tree$.apply(binarytreesredux.scala:51)
	at Tree$.apply(binarytreesredux.scala:51)
	at Tree$.apply(binarytreesredux.scala:51)
	at Tree$.apply(binarytreesredux.scala:51)
	at Tree$.apply(binarytreesredux.scala:51)
	at Tree$.apply(binarytreesredux.scala:51)
	at Tree$.apply(binarytreesredux.scala:51)
	at Tree$.apply(binarytreesredux.scala:51)
	at Tree$.apply(binarytreesredux.scala:51)
	at Tree$.apply(binarytreesredux.scala:51)
	at Tree$.apply(binarytreesredux.scala:51)
	at Tree$.apply(binarytreesredux.scala:51)
	at Tree$.apply(binarytreesredux.scala:51)
	at Tree$.apply(binarytreesredux.scala:51)
	at Tree$.apply(binarytreesredux.scala:51)
	at Tree$.apply(binarytreesredux.scala:51)
	at Tree$.apply(binarytreesredux.scala:51)
	at Tree$.apply(binarytreesredux.scala:51)
	at Tree$.apply(binarytreesredux.scala:51)
	at Tree$.apply(binarytreesredux.scala:51)
	at Go$$anonfun$calc$1.apply(binarytreesredux.scala:42)
	at Go$$anonfun$calc$1.apply(binarytreesredux.scala:41)
	at scala.collection.TraversableOnce$$anonfun$foldLeft$1.apply(TraversableOnce.scala:143)
	at scala.collection.TraversableOnce$$anonfun$foldLeft$1.apply(TraversableOnce.scala:143)
	at scala.collection.immutable.Range.foreach(Range.scala:78)
	at scala.collection.TraversableOnce$class.foldLeft(TraversableOnce.scala:143)
	at scala.collection.immutable.Range.foldLeft(Range.scala:46)
	at scala.collection.TraversableOnce$class.$div$colon(TraversableOnce.scala:137)
	at scala.collection.immutable.Range.$div$colon(Range.scala:46)
	at Go.calc(binarytreesredux.scala:41)
	at binarytreesredux$$anonfun$2$$anonfun$apply$1.apply$mcI$sp(binarytreesredux.scala:28)
java.lang.OutOfMemoryError: Java heap space
	at Tree$.apply(binarytreesredux.scala:51)
	at Tree$.apply(binarytreesredux.scala:51)
	at Tree$.apply(binarytreesredux.scala:51)
	at Tree$.apply(binarytreesredux.scala:51)
	at Tree$.apply(binarytreesredux.scala:51)
	at Tree$.apply(binarytreesredux.scala:51)
	at Tree$.apply(binarytreesredux.scala:51)
	at Tree$.apply(binarytreesredux.scala:51)
	at Tree$.apply(binarytreesredux.scala:51)
	at Tree$.apply(binarytreesredux.scala:51)
	at Tree$.apply(binarytreesredux.scala:51)
	at Tree$.apply(binarytreesredux.scala:51)
	at Tree$.apply(binarytreesredux.scala:51)
	at Tree$.apply(binarytreesredux.scala:51)
	at Tree$.apply(binarytreesredux.scala:51)
	at Tree$.apply(binarytreesredux.scala:51)
	at Tree$.apply(binarytreesredux.scala:51)
	at Tree$.apply(binarytreesredux.scala:51)
	at Tree$.apply(binarytreesredux.scala:51)
	at Tree$.apply(binarytreesredux.scala:51)
	at Go$$anonfun$calc$1.apply(binarytreesredux.scala:42)
	at Go$$anonfun$calc$1.apply(binarytreesredux.scala:41)
	at scala.collection.TraversableOnce$$anonfun$foldLeft$1.apply(TraversableOnce.scala:143)
	at scala.collection.TraversableOnce$$anonfun$foldLeft$1.apply(TraversableOnce.scala:143)
	at scala.collection.immutable.Range.foreach(Range.scala:78)
	at scala.collection.TraversableOnce$class.foldLeft(TraversableOnce.scala:143)
	at scala.collection.immutable.Range.foldLeft(Range.scala:46)
	at scala.collection.TraversableOnce$class.$div$colon(TraversableOnce.scala:137)
	at scala.collection.immutable.Range.$div$colon(Range.scala:46)
	at Go.calc(binarytreesredux.scala:41)
	at binarytreesredux$$anonfun$2$$anonfun$apply$1.apply$mcI$sp(binarytreesredux.scala:28)
	at binarytreesredux$$anonfun$2$$anonfun$apply$1.apply(binarytreesredux.scala:28)
